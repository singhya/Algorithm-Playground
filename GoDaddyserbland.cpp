#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

struct coord
{
    long long int x;
    long long int y;
    long long int w;
};
bool compareByX(const coord &a, const coord &b)
{
    if(a.x != b.x)
    return a.x < b.x;
    else
    return a.y < b.y;
}
bool compareByY(const coord &a, const coord &b)
{
    if(a.y != b.y)
    return a.y < b.y;
    else
    return a.x < b.x;
}
long long int max(long long int a, long long int b)
{
	if(a>b)
	return a;
	else
	return b;
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  
    int N;
    vector<coord> coordinates_sorted_by_x;
    cin>>N;
    //N=94;
	//long long int p[N*3] = {201907815, 429392519, 87672117, 837281448, 92131736, 578955782, 455202152, 9460149, 44208018, 2991368, 448874040, 197714275, 78956751, 5326166, 733130130, 942227372, 804308891, 272276334, 907993287, 571581523, 106536425, 779713242, 580832602, 153818016, 228226418, 110825817, 949656478, 648716510, 11150177, 473402655, 982618718, 47845585, 197125131, 488149336, 886171410, 836906712, 523542968, 888601860, 881474583, 190460367, 633656718, 858526426, 47897574, 879205016, 357473969, 832536462, 333690452, 436186357, 912368101, 739013504, 607721617, 696463303, 118317331, 155798676, 688344504, 8289119, 447101227, 43717335, 502971381, 321754071, 504206503, 486014573, 895177972, 593200413, 167383690, 980622836, 171794810, 96016893, 478382809, 381705647, 556946780, 26245840, 322087372, 634198668, 289695997, 835177491, 389358242, 136061401, 105952866, 984894049, 872693426, 370980412, 735281439, 979655719, 963518323, 58642904, 490667450, 851198427, 221064516, 360323539, 355629203, 297303483, 927579327, 94477612, 962826752, 857830039, 359717005, 744920777, 532860689, 47984390, 649657569, 479346599, 439485625, 257695234, 322387359, 328799925, 969860583, 717188303, 653025450, 109282365, 462360888, 284290565, 810557527, 582399694, 660604614, 828551713, 707687427, 76768759, 669636193, 845339378, 852702972, 190443834, 364443708, 829667897, 836051796, 612420596, 643766909, 193989691, 873819696, 546997265, 183931682, 687972374, 825915642, 417890766, 65696124, 382111332, 209893297, 606146171, 766271614, 249607326, 99575170, 77475275, 705340375, 889885639, 777436794, 262065087, 799139117, 15325646, 509183477, 662989816, 979290000, 249622737, 584678374, 970173510, 955698349, 865321347, 32823475, 172856541, 489738709, 52998543, 452901119, 675480498, 845042234, 452819933, 189514589, 751968879, 236611437, 11278398, 319160722, 55995171, 815522770, 77513884, 126269966, 899748904, 205208516, 88266764, 739395966, 604251605, 936168467, 823898077, 909679011, 449424423, 556922579, 698260435, 574131762, 259141258, 74901157, 605398921, 854206706, 166888437, 533156934, 554993341, 404299187, 725369814, 943110492, 931367423, 696852156, 934299709, 913488133, 16191871, 934063351, 740892487, 815222409, 557291820, 53886175, 593074730, 77740613, 964868352, 176881006, 723829850, 774686009, 214070087, 288036064, 566462432, 628832895, 37566188, 399557481, 381424518, 563452985, 695650911, 248917069, 790803758, 795853969, 456077884, 826752401, 927416987, 28120421, 993972917, 785004427, 18246686, 107012408, 267382437, 362447756, 292859833, 452493440, 903043868, 251816198, 876123339, 707097827, 15493042, 98766777, 524728702, 533975063, 16790906, 980526568, 938067761, 999460956, 637816716, 432888779, 121935150, 255840619, 493792512, 679298244, 119025411, 582266878, 424754153, 288779154, 515308670, 683512637, 450873628, 615783556, 987374166, 394072832, 88570677, 837691391, 981528895, 801393639, 203973933, 173945331, 741863357, 234311596, 926452837, 151714660, 156738275, 581470576, 262869973, 517337279, 367037576, 815037987, 355075442, 540825706, 531888575};
	for(int i=0;i<N;i++)
    {
        coord c;
        cin>>c.x;
        cin>>c.y;
        cin>>c.w;
        //c.x = p[i*3];
        //c.y = p[i*3+1];
        //c.w= p[i*3+2];
		coordinates_sorted_by_x.push_back(c);
    }
    sort(coordinates_sorted_by_x.begin(), coordinates_sorted_by_x.end(), compareByX);
    long long int M[N];
    M[0] = coordinates_sorted_by_x[0].w;
    for(int i=1;i<N;i++)
    {
    	long long int max = 0;	
		for(int j=0;j<i;j++)
    	{
    		if(coordinates_sorted_by_x[j].y<=coordinates_sorted_by_x[i].y)
    		{
    			if(M[j]>max)
				{
					max = M[j];	
				}	
			}
		}
		M[i]=max+coordinates_sorted_by_x[i].w;
	}
	long long int max = M[0]; 
	for(int i=1;i<N;i++)
	{
		if(max<M[i])
		{
			max = M[i];
		}
	}
	cout<<max;
	return 0;
}

